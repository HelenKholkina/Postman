{
	"info": {
		"_postman_id": "62b62af8-80a3-4c6e-8f0f-3b73489e5672",
		"name": "postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responceBody);\r",
							"postman.setEnvironmentVariable(\"token\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "HelenKholkina",
							"type": "text"
						},
						{
							"key": "password",
							"value": "6677",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "login",
							"value": "Helen",
							"disabled": true
						},
						{
							"key": "password",
							"value": "6677",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//structure check №1\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.response.to.have.body('{\"person\":{\"u_age\":27,\"u_name\":[null,3500,27],\"u_salary_1_5_year\":14000},\"qa_salary_after_12_months\":10150.0,\"qa_salary_after_6_months\":7000,\"start_qa_salary\":3500}\\n')\r",
							"});\r",
							"//structure check №2\r",
							"pm.test(\"json structure in the response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.person.u_age).to.be.a(\"Number\");\r",
							"    pm.expect(jsonData.person.u_name).to.be.a(\"Array\");\r",
							"    pm.expect(jsonData.person.u_salary_1_5_year).to.be.a(\"Number\");\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.be.a(\"Number\");\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.be.a(\"Number\");\r",
							"    pm.expect(jsonData.start_qa_salary).to.be.a(\"Number\");\r",
							"});\r",
							"//structure check №3\r",
							"test_data = {\r",
							"    \"person\": {\r",
							"        \"u_age\": 27,\r",
							"        \"u_name\": [\r",
							"            null,\r",
							"            3500,\r",
							"            27\r",
							"        ],\r",
							"        \"u_salary_1_5_year\": 14000\r",
							"    },\r",
							"    \"qa_salary_after_12_months\": 10150.0,\r",
							"    \"qa_salary_after_6_months\": 7000,\r",
							"    \"start_qa_salary\": 3500\r",
							"};\r",
							"\r",
							"var schema = {\r",
							"    \"person\": {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"            \"u_age\": {\"type\": \"integer\"},\r",
							"            \"u_name\": {\"type\": \"array\",\r",
							"            \"items\": {\"u_name[0]\": {\"type\": \"null\"},\r",
							"                      \"u_name[1]\": {\"type\": \"integer\"},\r",
							"                      \"u_name[2]\": {\"type\": \"integer\"}\r",
							"                }\r",
							"            },\r",
							"            \"u_salary_1_5_year\": {\"type\": \"integer\"}\r",
							"        }\r",
							"    },\r",
							"     \"qa_salary_after_12_months\": {\"type\": \"integer\"},\r",
							"    \"qa_salary_after_6_months\": {\"type\": \"integer\"},\r",
							"    \"start_qa_salary\": {\"type\": \"integer\"}\r",
							"};\r",
							"\r",
							"tests[\"Testing schema\"] = tv4.validate(test_data, schema);\r",
							"//structure check №4\r",
							"var data1 = [true, false];\r",
							"var data2 = [true, 123];\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
							"    pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"*2.9\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(jsonData.start_qa_salary*2.9);\r",
							"});\r",
							"\r",
							"pm.test(\"*4\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.person.u_salary_1_5_year).to.eql(jsonData.start_qa_salary*4);\r",
							"});\r",
							"\r",
							"pm.test(\"*2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(jsonData.start_qa_salary*2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \"auth_token\": \"{{token}}\",\r\n    \"age\": 27,\r\n    \"salary\": 3500,\r\n    \"name\": \"HelenKholkina\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		}
	]
}